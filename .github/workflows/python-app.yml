# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  # push:
  #   branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    

permissions:
  contents: read

jobs:
  build-lint-test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
        env-type: ['dev','qa','prod']
      fail-fast: false
    env:
      ENV_TYPE: ${{ matrix.env-type }}

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }} in ${{ matrix.env-type }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run REST API Server
      run: |
        python --version
        uvicorn app:app --host 0.0.0.0 --port 8000 --workers 4 &
        sleep 5
        sudo netstat -tulnp | grep 8000
        curl http://localhost:8000/get_hostname
        curl http://localhost:8000/get_ror
        curl http://localhost:8000/list_sut
      continue-on-error: true
    - name: Test REST API GET by requests
      run: |
        python --version
        python ./tests-requests/test_fastapi.py
      continue-on-error: true
    - name: Test REST API SET-GET by requests
      run: |
        python --version
        python ./tests-requests/test_fastapi_setror.py
    - name: Test with pytest - api
      run: |
        pytest --version
        pytest -m api
      continue-on-error: true
    - name: Test with pytest - xfail    
      run: |
        pytest --version
        pytest -m xfail
      continue-on-error: true
    - name: Test with pytest - smoke
      run: |
        pytest --version
        pytest -s -m smoke
      continue-on-error: true
    - name: Test with pytest - auth api
      run: |
        pytest --version
        pytest -s -m authapi
      continue-on-error: true
    - name: Test with pytest - datadriven
      run: |
        pytest --version
        pytest -m datadriven
      continue-on-error: true
    - name: Test with pytest all
      run: |
        pytest --version
        pytest
      continue-on-error: true      
    - name: Archive Pytest test report
      uses: actions/upload-artifact@v4
      with:
        name: RestAPI-test-report-${{ matrix.python-version }}-${{ matrix.env-type }}
        path: report
    - name: Upload Pytest report to GitHub
      uses: actions/upload-artifact@v4
      with:
        name: Pytest-test-report--${{ matrix.python-version }}-${{ matrix.env-type }}
        path: report